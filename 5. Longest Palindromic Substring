Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"

#dp, from isPalindoromic
#从右上角，左上到右下方向对角线搜索 （j-i max)
class Solution {
public:
    string longestPalindrome(string s) {
        int size = s.size();
        if(size == 0) return "";
        
        vector< vector < bool>> store (size, vector<bool> (size));
        for(int i = 0; i < size; ++i) {
            store[i][i] = true;
        }
        for(int i = 0; i < size-1; ++i) {
            store[i][i+1] = (s[i] == s[i+1]);
        }
        for(int j = 2; j < size; ++j){ //fill by colum
            for(int i = 0 ; i < j-1; ++i) {
                store[i][j] = store[i+1][j-1] && (s[i] == s[j]);
            }
        }

        for(int j = size-1; j >= 0; --j){
            for(int i = 0; i <= size - 1 -j; ++i) {
                if(store[i][i+j]) {
                    return  s.substr(i,j+1); 
                }
            }
        }
        return s.substr(0,1);   
    }
};
