Given a non-empty array containing only positive integers, 
find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.
#想法是dp， 背包问题
class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int total = accumulate(nums.begin(), nums.end(),0);
        if(total % 2 != 0 ) return false;
        int half = total/2;
        int size = nums.size();
        vector<vector<int>> dp(size + 1,vector<int> (half +1, 0));
        for(int i = 1; i <= size; ++i) {
            for(int j = 1; j <= half; ++j ) {
                if(j >= nums[i-1]) {
                    dp[i][j] = max(dp[i-1][j], nums[i-1] + dp[i-1][j- nums[i-1]]);
                }
            }
        }
        return dp[size][half] == half;
    }
};
