Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

Example 1:

Input: "1 + 1"
Output: 2
Example 2:

Input: " 2-1 + 2 "
Output: 3
Example 3:

Input: "(1+(4+5+2)-3)+(6+8)"
Output: 23

#只做加减法的calculator 遇到+/ - 就算 遇到（ 开始累积解锁， 遇到） 返回结果
class Solution {
public:
    int calculate(string s) {
        int start = 0;
        int res = helper(start, s);
        return res;
    }
    int helper(int & i, string & s) {
        int num = 0, sign = 1, res = 0;
        for(; i < s.size(); i++) {
            char x = s[i];
            if(isdigit(x)) {
                num = num * 10 + (s[i] - '0');
            } else if(x == '+' || x == '-') {
                res += sign * num;
                sign = (x == '+' ? 1 : -1);
                num = 0;
            } else if(x == '(') {
                res += sign * helper(++i, s);
                sign = 1;
            } else if(x == ')')
                return res + (sign * num);
        }
        return res + (sign * num);
    }
};
