Given an input string , reverse the string word by word. 

Example:

Input:  ["t","h","e"," ","s","k","y"," ","i","s"," ","b","l","u","e"]
Output: ["b","l","u","e"," ","i","s"," ","s","k","y"," ","t","h","e"]
Note: 

A word is defined as a sequence of non-space characters.
The input string does not contain leading or trailing spaces.
The words are always separated by a single space.
Follow up: Could you do it in-place without allocating extra space?


class Solution:
    def reverseWords(self, s: List[str]) -> None:
        """
        Do not return anything, modify s in-place instead.
        """
        # swap the list first; then swap the single words
        def swap(i,j):
            while i < j:
                s[i], s[j] = s[j], s[i]
                i += 1
                j -= 1
        swap(0, len(s) -1)
        i = 0
        j = 0
        while j < len(s):
            if s[j] != " ":
                j += 1
            else:
                swap(i, j-1)
                i = j + 1
                j += 1
        swap(i, j - 1) 
