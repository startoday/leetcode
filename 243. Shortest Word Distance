Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Input: word1 = “coding”, word2 = “practice”
Output: 3
Input: word1 = "makes", word2 = "coding"
Output: 1
Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

#限制条件很友好！肯定有解！
class Solution {
public:
    int shortestDistance(vector<string>& words, string word1, string word2) {
        int res = INT_MAX;
        int w1 = -1 ; int w2 = -1;
        for(int i = 0; i < words.size(); ++i) {
            if(words[i] == word1) {
                w1 = i;
                if(w2 != -1) res = min(res, abs(w1- w2));
            } 
            if(words[i] == word2) {
                w2 = i;
                if(w1 != -1) res = min(res, abs(w1- w2));
            }   
        }
        return res;
    }
};
time O(n) space O(1);
