#给一个array， array的值代表从该点你可以跳几步，问能不能达到最后一个点
Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Determine if you are able to reach the last index.

Example 1:

Input: [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:

Input: [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum
             jump length is 0, which makes it impossible to reach the last index.
             
            
#动态规划，check能到达的最远值即可

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int size = nums.size();
        int k = nums[0];
        for(int i = 0; i <= k; ++i) {
            if((i+nums[i]) >= (size-1)) return true;
            else k = max(k, i+nums[i]);
        }
        return false;
    }
};

#space O(1) time O(N)
