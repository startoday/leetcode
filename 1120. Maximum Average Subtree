Given the root of a binary tree, find the maximum average value of any subtree of that tree.

(A subtree of a tree is any node of that tree plus all its descendants. 
The average value of a tree is the sum of its values, divided by the number of nodes.)


class Solution {
public:
    double maximumAverageSubtree(TreeNode* root) {     
        double res = 0;
        helper(root, res);
        return res;
    }
    //return sum and total number
    
    pair<double, int> helper(TreeNode * root, double & res) {
        if(!root) return {0,0};
        pair<double, int> l = helper(root->left, res);
        
        pair<double, int> r = helper(root->right, res);
        
        double temp = 1.0 *(root->val + l.first + r.first)/(1 + l.second + r.second);
        res = max(temp, res);
        
        return {(root->val + l.first + r.first), (1 + l.second + r.second)};
    }
};
