Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: [1,2,2]
Output:
[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

#有重复元素，但return的是subset 不是subseuq。跟给定array的元素顺序无关
#sort 完每次只取重复元素里的 第一个
class Solution {
    vector<vector<int>> res;
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<int> temp {};
        helper(nums, 0, temp);
        return res;
    }
    void helper(vector<int>& nums,int st,vector<int>& temp) {
        res.push_back(temp);
        for(int i = st; i < nums.size(); ++i) {
            if(i == st || nums[i] != nums[i - 1]) {
                temp.push_back(nums[i]);
                helper(nums, i + 1, temp);
                temp.pop_back();
            }
        }
    }
};
