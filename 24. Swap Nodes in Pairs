#不能直接换val 必须要交换node
Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.
 
Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.

#交换并且每次移动一下

class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head || ! head->next) return head;
        ListNode * dummyHead = new ListNode (-1);
        dummyHead->next = head->next;
        ListNode * pre = dummyHead;
        while (head && head->next) {
            pre->next = head->next;
            head->next = pre->next->next;
            pre->next ->next = head;
            
            pre = head;
            head = head->next;
        }
        return dummyHead -> next;
    }
};
