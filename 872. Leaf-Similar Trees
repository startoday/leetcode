Consider all the leaves of a binary tree.  From left to right order, the values of those leaves form a leaf value sequence.



For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

Two binary trees are considered leaf-similar if their leaf value sequence is the same.

Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.
#tree的练习系列 值得注意的是 vector居然可以直接用 == 号来判断相等
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> a, b;
        helper(root1, a);
        helper(root2, b);
        /*
        if(a.size() != b.size()) return false;
        for( int i = 0; i < a.size() ; ++i ) {
            if(a[i] != b[i]) return false;
        }
        return true;
        */
        return a == b;
        
    }
    void helper(TreeNode* root, vector<int> & a) {
        if(!root) return;
        if(! root->left && ! root->right ) a.push_back(root->val);
        helper(root->left, a);
        helper(root->right, a);
    }
};
