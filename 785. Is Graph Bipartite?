Given an undirected graph, return true if and only if it is bipartite.

Recall that a graph is bipartite if we can split it's set of nodes into two independent subsets A and B 
such that every edge in the graph has one node in A and another node in B.

The graph is given in the following form: graph[i] is a list of indexes j 
for which the edge between nodes i and j exists.  Each node is an integer between 0 and graph.length - 1. 
There are no self edges or parallel edges: graph[i] does not contain i, and it doesn't contain any element twice.

Example :
Input: [[1,2,3], [0,2], [0,1,3], [0,2]]
Output: false
Explanation: 
The graph looks like this:
0----1
| \  |
|  \ |
3----2
We cannot find a way to divide the set of nodes into two independent subsets.

#The graph is undirected: if any element j is in graph[i], then i will be in graph[j].

#这个题给的表示方法是index（row #） 是node， （col 里面的所有都是该row的list of adj）
#dfs_all 吧，交替上色，有conflict return false
