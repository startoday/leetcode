#打印左边bottom 第一个， 简单题，为啥我老是第一想法就是用level num 这种， 慢的嘞（虽然time 都是 O（n）吧。。。）
#明儿加几个简单点的写法2333
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        if(!root) return -1;
        queue<TreeNode*> store;
        store.push(root);
        int curHeight = 1;
        int height = getHeight(root);
        int res = -1;
        while(!store.empty()){
            if(curHeight == height) {
                TreeNode * temp = store.front();
                res = temp->val;
            }
            int size = store.size();
            for(int i = 0; i < size; ++i){
                TreeNode * temp = store.front();
                //if (i == 0) res = temp->val; //记录每行第一个就不用管 height的事情了
                store.pop();
                if(temp->left) store.push(temp->left);
                if(temp->right) store.push(temp->right);
            }
            curHeight++;
        }
        return res;
    }
    
    int getHeight(TreeNode * root) {
        if(!root) return 0;
        return max(getHeight(root->left),getHeight(root->right))+1;
    }
};
