#翻转一个2D matrix

#写出发现是将纵列的每个数变成 新array 的横列

class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& A) {
        if(A.empty()) return A;
        int row = A.size();
        int col = A[0].size();
        vector<vector<int>>res;
        vector<int> aLine;
        for(int i = 0;i <col; i++){
            aLine.clear();
            for(int j =0; j<row; j++){
                aLine.push_back(A[j][i]);
            }
            res.push_back(aLine);
        }
        return res;
    }
};


#更直接的写法 直接 新建2Darray 加入对应点即可

class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& A) {
        if(A.empty()) return A;
        int row = A.size();
        int col = A[0].size();
        vector<vector<int>>res (col, vector<int>(row));
        for(int i = 0;i <row; i++){
            for(int j =0; j<col; j++){
                res[j][i]=A[i][j];
            }
        }
        return res;
    }
};

