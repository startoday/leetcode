A positive integer is magical if it is divisible by either A or B.

Return the N-th magical number.  Since the answer may be very large, return it modulo 10^9 + 7.

 

Example 1:
Input: N = 1, A = 2, B = 3
Output: 2

Example 2:
Input: N = 4, A = 2, B = 3
Output: 6

Example 3:
Input: N = 5, A = 2, B = 4
Output: 10

Example 4:
Input: N = 3, A = 6, B = 4
Output: 8

Note:
1 <= N <= 10^9
2 <= A <= 40000
2 <= B <= 40000

#很大，要么被A整除要么被B整除
数为 x/A + x/B - x/lcm(A,B) = N（最小公倍数 = A * B / gcd(A, B)）
#求X， 二分法 逼近解X

class Solution {
public:
    int nthMagicalNumber(int N, int A, int B) {
        long lcmup = A * B /gcd(A,B);
        
        long left = 2;  //注意需要是long
        long right = 1e14;
        int mod = 1e9 + 7;

        while( left < right) {
            long mid = (right - left) / 2 + left;
            if((mid / A + mid / B - mid / lcmup) < N) left = mid + 1;
            else right = mid;
        }

        return right % mod;
    }
};

