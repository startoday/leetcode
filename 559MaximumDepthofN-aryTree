#找 n-ary tree的 最大高度
#继承自找二叉树的最大高度

class Solution {
public:
    int maxDepth(Node* root) {
        if(root == NULL) return 0;
        
        set<int> heightStorage;
        if ((root->children).size() == 0) return 1;  // 这一行很重要 最后一行需要有值，否则set里面是空的
        for(Node* child: root->children){
            heightStorage.insert(maxDepth(child));
        }
        
        return *(--heightStorage.end())+1;     //set 中找max的 写法
    }
};

#其实不需要set存信息，只要一个值比较留下大的即可
class Solution {
public:
    int maxDepth(Node* root) {
        if(root == NULL) return 0;
        int res =1;  //只要有root就至少是1 
        for(Node* child: root->children){
            res=max(res, maxDepth(child)+1);
        }
        return res;      
    }
};
