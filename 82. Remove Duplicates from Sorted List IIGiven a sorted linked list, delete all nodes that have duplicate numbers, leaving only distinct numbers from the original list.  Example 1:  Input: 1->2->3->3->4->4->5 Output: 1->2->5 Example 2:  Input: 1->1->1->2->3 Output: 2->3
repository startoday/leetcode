Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

Example 1:

Input: 1->2->3->3->4->4->5
Output: 1->2->5
Example 2:

Input: 1->1->1->2->3
Output: 2->3

#与1的不同是只要有重复元素就把它删干净


#这个题头节点可能被删除--头节点改变的话就需要去建dummy node  ---1不需要怕

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head ->next) return head;
        ListNode * dummyHead = new ListNode (-1);
        dummyHead->next = head;
        ListNode * cur = dummyHead;
        //如果从最前面开始，一直check next的就不需要pre了
        while ( cur->next && cur->next->next) {
           if(cur->next->val == cur->next->next->val) {
                int temp = cur->next->val;
                while(cur->next && cur->next ->val ==temp){
                cur->next = cur -> next ->next;
                }
            } else {
               cur = cur ->next;
           }
        }
        
        return dummyHead->next;
    }
};
