You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.

Find out how many ways to assign symbols to make sum of integers equal to target S.

Example 1:
Input: nums is [1, 1, 1, 1, 1], S is 3. 
Output: 5
Explanation: 

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.

#....并不一定都是1 的！！！ 别瞎搞！
class Solution:
    def findTargetSumWays(self, nums: List[int], S: int) -> int:
        last = {0:1}
        for n in nums:
            new = Counter()
            for key,val in last.items():
                new[key + n] += val
                new[key - n] += val
            last = new
        return last[S]
