Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the library's sort function for this problem.

Example:
Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

//复习quick sort
class Solution {
public:
    void sortColors(vector<int>& nums) {
        //left than i ( not include i ) is 0;
        //[i,j) is 1
        // [j,k] is unknown space
        // (k, n-1) is 2
        int i = 0;
        int j = 0;
        int k = nums.size() - 1;
        while(j < nums.size() && j <= k) {
            if(nums[j] == 0) {
                swap(nums[i++], nums[j++]);
            } else if(nums[j] == 1) {
                j++;
            } else {
                swap(nums[j], nums[k--]);
            } 
        }
    }
};
